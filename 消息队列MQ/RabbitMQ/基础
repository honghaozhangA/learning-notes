RabbitMQ是实现了高级消息队列协议（AMQP）的开源消息代理软件（亦称面向消息的中间件）。
RabbitMQ服务器是用Erlang语言编写的，而聚类和故障转移是构建在开放电信平台框架上的。
所有主要的编程语言均有与代理接口通讯的客户端库。

作用：
    异步处理： 异步执行，提高效率
    应用解耦： 降低耦合度，避免单服务挂机
    流量削峰： 过滤不合条件的，只通过部分合条件的
    日志处理： 大访问量，日志后处理数据，用以流计算，大数据统计

---------------------------------------
------------ AMQP 和 JMS --------------
---------------------------------------
AMQP：
    高级消息队列协议，更准确说是链接协议，不从API层进行限定，而是直接定义网络交换的数据格式。
    是一个二进制协议，拥有一些现代化特点：多信道、协商式，异步，安全，跨平台，中立，高效特点。
JMS：
    Java消息服务 应用程序接口

JMS是定义了统一的接口，来对消息操作进行统一；AMQP是通过规定协议来统一数据交互格式。
JMS限定了必须使用Java语言；AMQP只是协议，不规定实现方式，因此是跨语言的。
JMS规定了两种消息模式；AMQP的消息模式更为丰富。

---------------------------------------
--------------- 相关产品 ---------------
---------------------------------------
ActiveMQ：基于JMS
ZeroMQ：基于C语言开发
RabbitMQ：基于AMQP协议，erlang语言开发，稳定性好
RocketMQ：基于JMS，阿里巴巴产品
Kafka：类似MQ的产品；分布式消息系统，高吞吐量

---------------------------------------
---------------- 模式 -----------------
---------------------------------------
1. 简单模式
    做最简单的事情
2. Work模式
    在工作者之间分配任务（竞争的消费者模式）
    比简单模式多一个或一些消费者
    对于任务过重或任务较多情况使用工作队列可以提高任务处理的速度。
3. 发布与订阅模式（Fanout交换机：广播，将消息交给所有绑定到交换机的队列）
    一次向许多消费者发送消息
    消息发送交换机，交换机转发给绑定的每个队列，每个消费者从绑定的队列中取数据
    Exchange只负责转发消息，不具备存储消息的能力，因此如果没有任何队列与Exchange绑定，或者没有符合路由规则的队列，那么消息会丢失
4. Routing路由模式（Direct交换机：定向，把消息交给符合指定routing key 的队列）
    有选择地接收消息
    队列与交换机绑定，而且指定key，向Exchange发送消息时，也必须指定消息key
5. Topics通配符模式（Topic交换机：通配符，把消息交给符合routing pattern（路由模式） 的队列）
    根据模式（主题）接收消息
    在队列绑定交换机Routing key的时候可以试用通配符
    通配符规则："aaa.bbb.ccc","aaa.bbb"
        aaa.#  匹配到  "aaa.bbb.ccc","aaa.bbb"
        aaa.*  匹配到  "aaa.bbb"
6. RPC远程调用模式

---------------------------------------
-------------- 模式总结 ----------------
---------------------------------------
RabbitMQ工作模式：
    1、简单模式 HelloWorld 一个生产者、一个消费者，不需要设置交换机（使用默认的交换机）
    2、工作队列模式 Work Queue 一个生产者、多个消费者（竞争关系），不需要设置交换机（使用默认的交换机）
    3、发布订阅模式 Publish/subscribe 需要设置类型为fanout的交换机，并且交换机和队列进行绑定，当发送消息到交换机后，交换机会将消息发送到绑定的队列
    4、路由模式 Routing 需要设置类型为direct的交换机，交换机和队列进行绑定，并且指定routing key，当发送消息到交换机后，交换机会根据routing key将消息发送到对应的队列
    5、通配符模式 Topic 需要设置类型为topic的交换机，交换机和队列进行绑定，并且指定通配符方式的routing key，当发送消息到交换机后，交换机会根据routing key将消息发送到对应的队列

---------------------------------------
-------------- 运转过程 ----------------
---------------------------------------
生产者发送消息
    生产者创建连接（Connection），开启一个信道（Channel），连接到RabbitMQ Broker；
    声明队列并设置属性；如是否排它，是否持久化，是否自动删除；
    将路由键（空字符串）与队列绑定起来；
    发送消息至RabbitMQ Broker；
    关闭信道；
    关闭连接；
    1. 建立连接
    2. 开启通道
    3. 发送消息
    4. 释放资源
消费者接收消息
    消费者创建连接（Connection），开启一个信道（Channel），连接到RabbitMQ Broker；
    向Broker 请求消费相应队列中的消息，设置相应的回调函数；
    等待Broker回应闭关投递响应队列中的消息，消费者接收消息；
    确认（ack，自动确认）接收到的消息；
    RabbitMQ从队列中删除相应已经被确认的消息；
    关闭信道；
    关闭连接；
    1. 建立连接
    2. 开启通道
    3. 准备接收消息
    4. Broker推送消息
    5. 发送确认
    6. 释放资源

生产者：
    创建交换机、队列
    绑定队列到交换机，指定Routing Key规则
    发送消息、交换机、Key
    给所有符合Key规则的队列派送消息
消费者：
    监听指定队列
    接收消息

---------------------------------------
-------------- 高级属性 ----------------
---------------------------------------
1. 过期超时TTL
2. 死信队列
3. 延时队列
4. 消息确认机制


















































。
